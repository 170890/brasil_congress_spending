from delta import DeltaTable
from helper.spark_session_builder import SparkSessionBuilder

def do_migration():
    spark = SparkSessionBuilder().build()

    (DeltaTable.createOrReplace(spark)
     .tableName("vendor")
     .addColumn("vendor_name", "STRING")
     .addColumn("vendor_id", "STRING")
     .property("description", "table with vendors")
     .execute())

    (DeltaTable.createOrReplace(spark)
     .tableName("party")
     .addColumn("party_acronym", "STRING")
     .property("description", "table with parties")
     .execute())

    (DeltaTable.createOrReplace(spark)
     .tableName("spending")
     .addColumn("parliamentary_name", "STRING")
     .addColumn("cpf", "STRING")
     .addColumn("registry_id", "STRING")
     .addColumn("number_parliamentary_wallet", "STRING")
     .addColumn("number_legislature","STRING")
     .addColumn("uf","STRING")
     .addColumn("party_acronym","STRING")
     .addColumn("legislature_code","STRING")
     .addColumn("sub_quota_number","STRING")
     .addColumn("description","STRING")
     .addColumn("sub_quota_specification_number","STRING")
     .addColumn("specification_description","STRING")
     .addColumn("vendor_name","STRING")
     .addColumn("vendor_id","STRING")
     .addColumn("number","STRING")
     .addColumn("identifier_document_type","STRING")
     .addColumn("emission_date","TIMESTAMP")
     .addColumn("document_value","STRING")
     .addColumn("gloss_value","STRING")
     .addColumn("liquid_value","STRING")
     .addColumn("month_number","STRING")
     .addColumn("year_number","STRING")
     .addColumn("installment_number","STRING")
     .addColumn("passenger","STRING")
     .addColumn("excerpts","STRING")
     .addColumn("batch_number","STRING")
     .addColumn("refund_number","STRING")
     .addColumn("restituition_value","STRING")
     .addColumn("congress_person_id","STRING")
     .addColumn("document_id","STRING")
     .addColumn("document_url","STRING")
     .property("description", "table with spendings")
     .execute())

if __name__ == '__main__':
    do_migration()